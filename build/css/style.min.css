/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}.nav{display:flex;flex-direction:row;align-items:center;font-size:24px;margin:0 auto;font-weight:300}@media screen and (max-width:1250px){.nav{display:none}}.nav>div{margin-right:75px;position:relative}.nav>div:hover{cursor:pointer}.nav>div:last-child{margin-right:0}.nav__bg{position:absolute;display:none;top:0;left:0;width:100%;height:100%;background:rgba(35,50,184,.5);-webkit-filter:blur(23px);filter:blur(23px);border-radius:5px}@media screen and (max-width:1250px){.nav__bg{background:0 0}}.navMobile{position:fixed;display:none;flex-direction:column;justify-content:center;width:100%;height:100%;z-index:15;left:0;top:0;font-size:30px;color:#fff;background:rgba(0,0,0,.8);backdrop-filter:blur(10px)}.navMobile__wrap{display:flex;flex-direction:row;justify-content:center}.navMobile__close{background:#fff;position:absolute;right:40px;top:52px;width:32px;height:2px;transform:rotate(135deg);cursor:pointer}.navMobile__close::after{background:#fff;content:'';display:block;width:32px;height:2px;transform:rotate(90deg)}.navMobile .link_wrap{margin:auto}.navMobile .link_wrap>div{margin-bottom:60px}.navMobile .link_wrap>div a{display:block;width:100%;text-align:center}@font-face{font-family:Rubik;src:local("Rubik Light"),local("Rubik-Light"),url(../fonts/Rubiklight.woff2) format("woff2"),url(../fonts/Rubiklight.woff) format("woff"),url(../fonts/Rubiklight.ttf) format("truetype");font-weight:300;font-style:normal}@font-face{font-family:Rubik;src:local("Rubik Medium"),local("Rubik-Medium"),url(../fonts/Rubikmedium.woff2) format("woff2"),url(../fonts/Rubikmedium.woff) format("woff"),url(../fonts/Rubikmedium.ttf) format("truetype");font-weight:500;font-style:normal}@font-face{font-family:Rubik;src:local("Rubik Bold"),local("Rubik-Bold"),url(../fonts/Rubikbold.woff2) format("woff2"),url(../fonts/Rubikbold.woff) format("woff"),url(../fonts/Rubikbold.ttf) format("truetype");font-weight:700;font-style:normal}*,::after,::before{box-sizing:inherit}html{box-sizing:border-box;scroll-behavior:smooth}body{font:300 18px Rubik,sans-serif;background:#25242a;margin:0;color:#fff;position:relative}img{max-width:100%}a{text-decoration:none;font-size:inherit;color:inherit}ul{padding:0;margin:0}.container{display:block;width:100%;margin:0 auto;max-width:1290px;padding:0 20px}@media screen and (max-width:768px){.container{padding:0 25px}}.h1{font-size:65px;line-height:166.5%;font-weight:300}@media screen and (max-width:768px){.h1{font-size:50px}}@media screen and (max-width:630px){.h1{font-size:45px}}@media screen and (max-width:550px){.h1{font-size:40px}}.bold{font-weight:700}.telegram{background:#0a64b7;display:block;width:67px;height:67px;position:fixed;right:10%;z-index:11;bottom:10%;cursor:pointer;border-radius:50%}@media screen and (max-width:1050px){.telegram{bottom:7%;right:7%}}@media screen and (max-width:768px){.telegram{bottom:5%;right:7%}}.telegram::before{content:'X';font-size:30px;display:none;color:#fff;position:absolute;left:50%;top:50%;transform:translateX(-50%) translateY(-50%)}.telegramFull{width:380px;height:224px;position:fixed;right:10%;z-index:10;bottom:10%;transform:translateY(-37px);display:none}.telegramFull__content{background:#282730;height:182px;border-radius:9px}.telegramFull__content button{width:203px;height:34px;border-radius:6px;font-size:14px;color:#fff;font-weight:400}.telegramFull__content span{display:block;padding:20px;margin-bottom:5px}.telegramFull__buttons{display:flex;flex-direction:column;align-items:center;justify-content:center}.telegramFull__send{background:#0a64b7;border:none;margin-bottom:18px}.telegramFull__noTelegram{background:inherit;border:2px solid #0a64b7}.hr{display:flex;flex-direction:row;transform:translateY(10px)}.hr__text{background:#3f3d4b;font-size:12px;line-height:14px;display:flex;flex-direction:row;padding:15px 0 15px 15px;width:100%;max-width:230px;border-radius:4px;position:absolute;top:-50px;right:0;z-index:-1;transform:translateZ(-14px)}.hr__text::before{content:url(../img/hr_arrow.png);display:block;margin-right:10px}.resipients{display:flex;flex-direction:row}.resipient{position:absolute;top:-53px;left:40px;z-index:-1;cursor:pointer}.resipient:first-child{left:0;z-index:10!important}.resipient:last-child{left:80px}.header{display:flex;flex-direction:row;align-items:center;width:100%;padding:30px 0;position:fixed;z-index:10;left:0;top:0;background:inherit;opacity:.9;backdrop-filter:blur(19px)}@media screen and (max-width:1250px){.header{height:82px;padding:0}}.header__wrap{width:100%;display:flex;flex-direction:row;justify-content:center;margin:0 auto}@media screen and (max-width:1250px){.header__wrap{justify-content:space-between;width:85%;height:82px;padding:40px 0 0 0}}@media screen and (max-width:768px){.header__wrap{padding:40px 20px 0;width:100%}}@media screen and (max-width:500px){.header__wrap{padding:40px 0 0 0}}.logo{position:absolute;left:10%;top:40px;transform:translateY(-30%);display:block}@media screen and (max-width:1400px){.logo{left:5%}}@media screen and (max-width:1250px){.logo{left:1%;position:static}}.burger{background:#fff;width:29px;height:1.5px;position:relative;display:none}@media screen and (max-width:1250px){.burger{display:block}}.burger::after,.burger::before{background:#fff;content:'';display:block;width:36px;height:1.5px;position:absolute;left:0}.burger::before{top:-8px}.burger::after{top:8px}.main_window{min-height:100vh}@media screen and (max-width:500px){.main_window{min-height:none}}.main_window__wrap{min-height:100vh;display:flex;flex-direction:row;justify-content:space-between;align-items:center}@media screen and (max-width:1250px){.main_window__wrap{flex-direction:column;justify-content:center}}.main_window__title_wrapper{display:flex;flex-direction:column;justify-content:center}@media screen and (max-width:1250px){.main_window__title_wrapper{padding-top:150px;padding-bottom:20px}}@media screen and (max-width:768px){.main_window__title_wrapper{padding-top:80px}}@media screen and (max-width:500px){.main_window__title_wrapper{padding-top:122px}}.main_window__title span{display:block}.tabulation{overflow:hidden;width:100%}.tab{width:100%;margin:0 auto;line-height:30px}.tab__wrap{width:100%;display:flex;flex-direction:row}@media screen and (max-width:1050px){.tab__wrap{flex-direction:column}}.tab__title{width:25%;display:flex;flex-direction:column;justify-content:flex-end;font-size:48px;position:relative;text-align:center;line-height:47px}@media screen and (max-width:1050px){.tab__title{max-width:100%;width:100%}}@media screen and (max-width:500px){.tab__title{max-width:100%;width:auto;flex-direction:row;justify-content:flex-start;text-align:left}}.tab__title::before{background:#2b2b2e;width:3px;height:1000000vh;display:block;content:'';position:absolute;right:0;top:0;transform:translateY(-50%)}@media screen and (max-width:1050px){.tab__title::before{display:none}}.tab__title::after{position:absolute;content:'';display:block;font-size:100px;color:rgba(255,255,255,.07);left:50%;transform:translateX(-50%);bottom:0;font-weight:700}@media screen and (max-width:500px){.tab__title::after{left:63px}}.tab__title span{display:flex;flex-direction:row;justify-content:center;font-size:inherit}.tab__content{padding-left:40px;max-width:70%}@media screen and (max-width:1050px){.tab__content{max-width:100%;width:100%;padding-left:0}}.tab__point{position:relative}.tab__point::after{background:#2b2c2e;display:block;content:'';position:absolute;right:-15px;top:0;height:1000000vh;width:.5px;transform:translateY(-50%);z-index:-1}@media screen and (max-width:1050px){.tab__point::after{display:none}}.tab__point:last-child::after{display:none}.about__wrap{padding-top:90px}@media screen and (max-width:1050px){.about__wrap{padding-top:70px}}.about__text{max-width:420px}@media screen and (max-width:500px){.about__text{width:100%;max-width:none}}.about__text ul{padding-top:20px;padding-left:20px}.about__text li{padding-bottom:5px}.about__text li:last-child{padding-bottom:0}.about__block{display:flex;flex-direction:row;justify-content:space-between}@media screen and (max-width:1170px){.about__block:first-child{flex-direction:column}}@media screen and (max-width:1050px){.about__block:first-child{flex-direction:row;justify-content:space-around}}@media screen and (max-width:768px){.about__block:first-child{flex-direction:column;align-items:center}}@media screen and (max-width:1170px){.about__block:first-child .about__text{margin-bottom:80px}}@media screen and (max-width:768px){.about__block:first-child .about__text{margin-bottom:40px}}.about__block:last-child{align-items:flex-end;margin-top:130px}@media screen and (max-width:1050px){.about__block:last-child{margin-top:60px}}@media screen and (max-width:768px){.about__block:last-child{flex-direction:column;align-items:center;margin-top:40px}}.about__point{width:30%;padding-right:10px}@media screen and (max-width:768px){.about__point{width:70%;margin-bottom:67px}.about__point .about__point:last-child{margin-bottom:0}}@media screen and (max-width:550px){.about__point{width:100%}}.about__point span{display:block;margin-bottom:15px;font-weight:500;font-size:40px;line-height:47px}.about__title{padding-bottom:115px}@media screen and (max-width:1050px){.about__title{padding-bottom:50px}}@media screen and (max-width:768px){.about__title{padding-bottom:40px}}@media screen and (max-width:500px){.about__title{padding-bottom:20px}}.about__title::after{content:'01';bottom:135px}@media screen and (max-width:1050px){.about__title::after{bottom:85px}}@media screen and (max-width:768px){.about__title::after{bottom:75px}}@media screen and (max-width:500px){.about__title::after{bottom:50px}}.caseWrapper{display:flex;flex-direction:column;flex-wrap:wrap-reverse;align-items:center;justify-content:center;max-height:900px;width:100%;margin:0}@media screen and (max-width:1155px){.caseWrapper{flex-wrap:nowrap;max-height:none}}@media screen and (max-width:1050px){.caseWrapper{flex-direction:row;flex-wrap:wrap-reverse}}.our_cases{width:100%;margin:0 auto}.our_cases__wrap{width:100%;padding-top:200px}@media screen and (max-width:1050px){.our_cases__wrap{padding-top:150px}}@media screen and (max-width:768px){.our_cases__wrap{padding-top:100px}}.our_cases__content{display:flex;flex-direction:row;justify-content:center;width:70%;padding-left:7.5%;padding-right:4%}@media screen and (max-width:1050px){.our_cases__content{width:100%}}.our_cases__title{padding-bottom:115px}@media screen and (max-width:1050px){.our_cases__title{padding-bottom:90px}}@media screen and (max-width:768px){.our_cases__title{padding-bottom:70px}}@media screen and (max-width:500px){.our_cases__title{padding-bottom:26px}}.our_cases__title::after{content:'02';bottom:195px}@media screen and (max-width:1050px){.our_cases__title::after{bottom:170px}}@media screen and (max-width:768px){.our_cases__title::after{bottom:150px}}@media screen and (max-width:500px){.our_cases__title::after{bottom:105px}}.case{max-width:368px;width:100%;height:434px;margin:0;display:flex;flex-direction:column;justify-content:flex-end;align-items:center;position:relative}@media screen and (max-width:870px){.case{margin-bottom:15px}}.case:nth-child(1){background:#1d2b5b}.case:nth-child(2){background:#083841}.case:nth-child(3){background:#31205d;margin-top:30%}@media screen and (max-width:1155px){.case:nth-child(3){margin-top:0}}.case:hover .case__content{opacity:1}.case__title{font-weight:500;text-transform:uppercase;padding-bottom:30px}.case__img{display:flex;flex-direction:column;justify-content:flex-end;overflow:hidden}.case__img img{display:block}.case__content{background:rgba(1,8,33,.9);display:flex;opacity:0;line-height:25px;font-size:14px;font-weight:300;justify-content:center;flex-direction:column;position:absolute;width:100%;height:100%;left:0;bottom:0;z-index:3;padding:0 60px;backdrop-filter:blur(19px);transition:opacity .65s}.work__wrap{padding-top:215px}@media screen and (max-width:1050px){.work__wrap{padding-top:140px}}@media screen and (max-width:500px){.work__wrap{padding-top:105px}}.work__title{padding-bottom:15px}@media screen and (max-width:1050px){.work__title{padding-bottom:75px}}@media screen and (max-width:768px){.work__title{padding-bottom:45px}}@media screen and (max-width:500px){.work__title{padding-bottom:31px}}.work__title::after{content:'03';bottom:40px}@media screen and (max-width:1050px){.work__title::after{bottom:105px}}@media screen and (max-width:768px){.work__title::after{bottom:75px}}.work__description{max-width:530px;padding-left:40px}@media screen and (max-width:500px){.work__description{padding-left:0}}.work__list{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:space-between;margin-top:130px}@media screen and (max-width:1050px){.work__list{margin-top:65px}}.work__content{padding-left:0}.vacancy{margin-bottom:100px;width:33%;padding-left:30px}@media screen and (max-width:1050px){.vacancy{margin-bottom:50px}}@media screen and (max-width:650px){.vacancy{width:45%}}@media screen and (max-width:600px){.vacancy{width:100%}}@media screen and (max-width:500px){.vacancy{padding-left:0;margin-bottom:30px}}.vacancy__title{font-size:36px;line-height:35px;font-weight:500;padding-bottom:5px;display:block}@media screen and (max-width:600px){.vacancy:nth-child(2n){display:flex;flex-direction:column;align-items:flex-end}}.vacancy:nth-child(4){margin-bottom:0}@media screen and (max-width:650px){.vacancy:nth-child(4){margin-bottom:100px}}@media screen and (max-width:500px){.vacancy:nth-child(4){margin-bottom:30px}}.vacancy:nth-child(5){margin-bottom:0}.vacancy:last-child{opacity:0}.callback{width:100%}.callback__wrap{width:100%;padding-top:300px}@media screen and (max-width:1050px){.callback__wrap{padding-top:150px}}@media screen and (max-width:768px){.callback__wrap{padding-top:110px}}@media screen and (max-width:500px){.callback__wrap{padding-top:130px}}.callback__title{padding-bottom:50px}@media screen and (max-width:500px){.callback__title{padding-top:60px}}.callback__title::after{content:'04';bottom:120px}.callback__content{width:100%}.callback__text{margin-bottom:54px;width:100%;text-align:center}@media screen and (max-width:500px){.callback__text{text-align:left;max-width:70%;margin-bottom:26px}}@media screen and (max-width:400px){.callback__text{max-width:90%}}.callback__form{display:flex;flex-direction:column;justify-content:center;align-items:center;width:100%}.callback__form input{background:#34323a;display:block;width:600px;margin-bottom:28px;padding:20px 0 20px 36px;border:0;color:#fff;font-size:18px;max-width:100%}@media screen and (max-width:500px){.callback__form input{padding:20px 0 20px 20px}}.callback__form input:active,.callback__form input:focus{outline:0}.callback__form textarea{background:#34323a;width:600px;display:block;margin-bottom:29px;min-height:132px;padding:20px 0 20px 36px;border:0;color:#fff;font-size:18px;resize:none;max-width:100%}.callback__form textarea:active,.callback__form textarea:focus{outline:0}.callback__form button{background:#0f1c47;display:block;width:291px;height:72px;color:#fff;border:none;font-size:18px}@media screen and (max-width:500px){.callback__form button{width:100%}}.callback__form button:hover{background:#21398e}.callback__form button:active{background:#d6d6d6;color:#414141}.contacts{width:100%}.contacts__wrap{width:100%;display:flex;flex-direction:row;justify-content:space-around;padding-top:180px;padding-bottom:125px}@media screen and (max-width:1190px){.contacts__wrap{flex-direction:column;justify-content:center;align-items:center;padding-bottom:75px}}@media screen and (max-width:1050px){.contacts__wrap{padding-top:100px}}.contacts__title{font-weight:500;margin-bottom:55px;display:block}.contacts__content{display:flex;flex-direction:column;justify-content:space-between;align-items:flex-start}@media screen and (max-width:1190px){.contacts__content{max-width:675px;width:100%;justify-content:space-around;align-items:center}}@media screen and (max-width:450px){.contacts__content{align-items:flex-start}}.contacts ul{list-style:none;margin-top:-12px}.contacts__links{display:flex;flex-direction:row;width:100%}@media screen and (max-width:1190px){.contacts__links{justify-content:space-around;margin-bottom:55px}}@media screen and (max-width:500px){.contacts__links{margin-bottom:47px}}@media screen and (max-width:450px){.contacts__links{justify-content:space-between}}.contacts__block{padding-right:150px}@media screen and (max-width:1190px){.contacts__block{padding-right:0}}.contacts__block:last-child{padding-right:0}.contacts__block:last-child a{text-decoration:underline}.contacts__block li{line-height:45px;display:block}@media screen and (max-width:500px){.contacts__block li{line-height:63px}}.contacts__block li:hover{cursor:pointer}@media screen and (max-width:1190px){.contacts__map .contacts__title{text-align:center}}@media screen and (max-width:500px){.contacts__map .contacts__title{text-align:left;margin-bottom:33px}}.contacts__copyright{line-height:38px}@media screen and (max-width:1190px){.contacts__copyright{text-align:center}}@media screen and (max-width:450px){.contacts__copyright{text-align:left}}.map{position:relative}@media screen and (max-width:1190px){.map{margin-bottom:55px}}@media screen and (max-width:500px){.map{margin-bottom:90px}}.map__map{max-width:675px;width:100%;max-height:450px;position:relative;display:block}.point{display:block;position:absolute;z-index:10;transition:opacity 1s}.point__img{width:18px;height:24px}@media screen and (min-width:550px){.point:hover .point__full{opacity:1;display:flex}}.point:first-child{left:12%;top:57%}.point:first-child .point__full{transform:translateX(100%);border-bottom:5px solid #671611}.point:last-child{right:11%;top:36%}.point:last-child .point__full{border-bottom:5px solid #117e85}.point__full{opacity:0;display:none;width:341px;height:87px;border-radius:10px 10px 0 0;background:rgba(19,19,19,.69);backdrop-filter:blur(11px);padding:23px 27px;font-size:14px;line-height:23px;flex-direction:row;align-items:center;position:absolute;right:11%;top:36%}.point__full_img{margin-right:20px}.point__title{font-weight:500}.pointMobile{display:none}.pointMobile-2{border-bottom:5px solid #117e85;margin-bottom:20px}.pointMobile-1{border-bottom:5px solid #671611;margin-bottom:15px}@media screen and (max-width:550px){.pointMobile{display:flex!important;width:100%;opacity:1;position:static}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
